{"version":3,"sources":["src/collisionDetection.js","src/ball.js","src/paddle.js","src/input.js","src/brick.js","src/levels.js","src/game.js","src/index.js"],"names":["detectCollision","ball","gameObject","bottomOfBall","position","y","size","topOfBall","topOfObject","leftSideOfObject","x","rightSideOfObject","width","bottomOfObject","height","Ball","game","image","document","getElementById","gameWidth","gameHeight","resetPositionAndSpeed","ctx","drawImage","speed","deltaTime","lives","console","log","paddle","Paddle","maxSpeed","fillStyle","fillRect","InputHanlder","addEventListener","event","keyCode","moveLeft","moveRight","togglePause","start","stop","Brick","markedForDeletions","level1","level2","level3","buildLevel","level","bricks","forEach","row","rowIndex","brick","brickIndex","push","GAMESIZE","GAMESTATE","PAUSED","RUNNING","MENU","GAMEOVER","NEWLEVEL","Game","InputHandler","setupGame","gamestate","gameObjects","currentLevel","levels","update","filter","length","canvas","draw","rect","fill","font","textAlign","fillText","img","w","h","glitchInterval","offset","Image","init","clearInterval","window","innerWidth","setInterval","clear","setTimeout","glitchImg","randInt","i","Math","random","spliceWidth","spliceHeight","a","b","onload","onresize","src","getContext","GAME_WIDTH","GAME_HEIGHT","lastTime","gameLoop","timestamp","clearRect","requestAnimationFrame"],"mappings":";AAmBC,aAnBM,SAASA,EAAgBC,EAAMC,GAChCC,IAAAA,EAAeF,EAAKG,SAASC,EAAIJ,EAAKK,KACtCC,EAAYN,EAAKG,SAASC,EAE1BG,EAAcN,EAAWE,SAASC,EAClCI,EAAmBP,EAAWE,SAASM,EACvCC,EAAoBT,EAAWE,SAASM,EAAIR,EAAWU,MACvDC,EAAiBX,EAAWE,SAASC,EAAIH,EAAWY,OAGtDX,OAAAA,GAAgBK,GAChBD,GAAaM,GACbZ,EAAKG,SAASM,GAAKD,GACnBR,EAAKG,SAASM,EAAIT,EAAKK,MAAQK,EAMlC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA;;ACyCE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5DH,IAAA,EAAA,QAAA,wBA4DG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1DkBI,IAAAA,EA0DlB,WAzDWC,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXC,KAAAA,MAAQC,SAASC,eAAe,YAEhCC,KAAAA,UAAYJ,EAAKI,UACjBC,KAAAA,WAAaL,EAAKK,WAClBL,KAAAA,KAAOA,EACPM,KAAAA,wBACAhB,KAAAA,KAAO,GAkDb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA/CIiB,MAAAA,SAAAA,GACHA,EAAIC,UACF,KAAKP,MACL,KAAKb,SAASM,EACd,KAAKN,SAASC,EACd,KAAKC,KACL,KAAKA,QAyCR,CAAA,IAAA,wBArCuB,MAAA,WACjBF,KAAAA,SAAW,CACdM,EAAG,GACHL,EAAG,KAGAoB,KAAAA,MAAQ,CACXf,EAAG,EACHL,GAAI,KA6BP,CAAA,IAAA,SAzBMqB,MAAAA,SAAAA,GACAtB,KAAAA,SAASM,GAAK,KAAKe,MAAMf,EACzBN,KAAAA,SAASC,GAAK,KAAKoB,MAAMpB,GAG1B,KAAKD,SAASM,EAAI,KAAKJ,KAAO,KAAKc,WAAa,KAAKhB,SAASM,EAAI,KAC/De,KAAAA,MAAMf,GAAK,KAAKe,MAAMf,GAIzB,KAAKN,SAASC,EAAI,IACfoB,KAAAA,MAAMpB,GAAK,KAAKoB,MAAMpB,GAIzB,KAAKD,SAASC,EAAI,KAAKC,KAAO,KAAKe,aAChCL,KAAAA,KAAKW,QACVC,QAAQC,IAAI,QAAS,KAAKb,KAAKW,OAC1BL,KAAAA,0BAGH,EAAgB,EAAA,iBAAA,KAAM,KAAKN,KAAKc,UAC7BL,KAAAA,MAAMpB,GAAK,KAAKoB,MAAMpB,EACtBD,KAAAA,SAASC,EAAI,KAAKW,KAAKc,OAAO1B,SAASC,EAAI,KAAKC,UAExD,EAAA,GAAA,QAAA,QAAA;;ACZA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhDkByB,IAAAA,EAgDlB,WA/CWf,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXI,KAAAA,UAAYJ,EAAKI,UAGjBR,KAAAA,MAAQ,IACRE,KAAAA,OAAS,GAGTV,KAAAA,SAAW,CACdM,EAAGM,EAAKI,UAAY,EAAI,KAAKR,MAAQ,EACrCP,EAAGW,EAAKK,WAAa,KAAKP,OAAS,IAIhCW,KAAAA,MAAQ,EACRO,KAAAA,SAAW,EAgCjB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WA5BU,MAAA,WACJP,KAAAA,OAAS,KAAKO,WA2BpB,CAAA,IAAA,YAxBW,MAAA,WACLP,KAAAA,MAAQ,KAAKO,WAuBnB,CAAA,IAAA,OApBM,MAAA,WACAP,KAAAA,MAAQ,IAmBd,CAAA,IAAA,OAfIF,MAAAA,SAAAA,GACHA,EAAIU,UAAY,YAChBV,EAAIW,SAAS,KAAK9B,SAASM,EAAG,KAAKN,SAASC,EAAG,KAAKO,MAAO,KAAKE,UAajE,CAAA,IAAA,SATMY,MAAAA,SAAAA,GAGAtB,KAAAA,SAASM,GAAK,KAAKe,MAEnBrB,KAAAA,SAASM,EAAI,EAAK,KAAKN,SAASM,EAAI,EAAK,KAAKN,SAASM,EACvDN,KAAAA,SAASM,EAAI,KAAKE,MAAQ,KAAKQ,UAC/B,KAAKhB,SAASM,EAAI,KAAKU,UAAY,KAAKR,MACzC,KAAKR,SAASM,MACnB,EAAA,GAAA,QAAA,QAAA;;ACbA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnCkByB,IAAAA,EACnB,SAAYL,EAAAA,EAAQd,GAAM,EAAA,KAAA,GACxBE,SAASkB,iBAAiB,UAAW,SAAAC,GAC3BA,OAAAA,EAAMC,SACP,KAAA,GACHR,EAAOS,WACP,MAEG,KAAA,GACHT,EAAOU,YACP,MAEG,KAAA,GACHxB,EAAKyB,cACL,MAEG,KAAA,GACHzB,EAAK0B,WAKXxB,SAASkB,iBAAiB,QAAS,SAAAC,GACzBA,OAAAA,EAAMC,SAEP,KAAA,GACCR,EAAOL,MAAQ,GAAGK,EAAOa,OAC7B,MAGG,KAAA,GACCb,EAAOL,MAAQ,GAAGK,EAAOa,WAIpC,QAAA,QAAA;;ACJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/BH,IAAA,EAAA,QAAA,wBA+BG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA7BkBC,IAAAA,EA6BlB,WA5BW5B,SAAAA,EAAAA,EAAMZ,GAAU,EAAA,KAAA,GACrBa,KAAAA,MAAQC,SAASC,eAAe,iBAEhCH,KAAAA,KAAOA,EAEPJ,KAAAA,MAAQ,GACRE,KAAAA,OAAS,GAETV,KAAAA,SAAWA,EAEXyC,KAAAA,oBAAqB,EAkB3B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAfQ,MAAA,YACH,EAAgB,EAAA,iBAAA,KAAK7B,KAAKf,KAAM,QAC7Be,KAAAA,KAAKf,KAAKwB,MAAMpB,GAAK,KAAKW,KAAKf,KAAKwB,MAAMpB,EAC1CwC,KAAAA,oBAAqB,KAY7B,CAAA,IAAA,OARItB,MAAAA,SAAAA,GACHA,EAAIC,UACF,KAAKP,MACL,KAAKb,SAASM,EACd,KAAKN,SAASC,EACd,KAAKO,MACL,KAAKE,YAER,EAAA,GAAA,QAAA,QAAA;;AC+BF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,OAAA,QAAA,OAAA,QAAA,YAAA,EA9DD,IAAA,EAAA,EAAA,QAAA,YA8DC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA5DM,IAAMgC,EAAS,CACpB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAqD7B,QAAA,OAAA,EAhDM,IAAMC,EAAS,CACpB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAwC7B,QAAA,OAAA,EAnCM,IAAMC,EAAS,CACpvB,SAASC,EAAWjC,EAAMkC,GAC3BC,IAAAA,EAAS,GAcNA,OAZPD,EAAME,QAAQ,SAACC,EAAKC,GAClBD,EAAID,QAAQ,SAACG,EAAOC,GACdpD,IAAAA,EAAW,CACbM,EAAG,GAAK8C,EACRnD,EAAG,GAAK,GAAKiD,GAED,IAAVC,GACFJ,EAAOM,KAAK,IAAIb,EAAJ,QAAU5B,EAAMZ,QAK3B+C,EACR,QAAA,OAAA;;ACiKE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/NH,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,YA2NG,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAzNH,IAAMO,EAAW,CACfhD,EAAG,IACHL,EAAG,KAGCsD,EAAY,CAChBC,OAAQ,EACRC,QAAS,EACTC,KAAM,EACNC,SAAU,EACVC,SAAU,GAGSC,EA4MlB,WA3Ma,SAAA,IAAA,EAAA,KAAA,GACP7C,KAAAA,UAAYsC,EAAShD,EACrBW,KAAAA,WAAaqC,EAASrD,EACtBJ,KAAAA,KAAO,IAAIc,EAAJ,QAAS,MAChBe,KAAAA,OAAS,IAAIC,EAAJ,QAAW,MACrBmC,IAAAA,EAAJ,QAAiB,KAAKpC,OAAQ,MACzBqC,KAAAA,YAqMN,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YAlMW,MAAA,WACL/C,KAAAA,UAAY,KAAKA,UACjBC,KAAAA,WAAa,KAAKA,WAClB+C,KAAAA,UAAYT,EAAUG,KACtBO,KAAAA,YAAc,GACd1C,KAAAA,MAAQ,EACRwB,KAAAA,OAAS,GACTmB,KAAAA,aAAe,EACfC,KAAAA,OAAS,CAACzB,EAAD,OAASC,EAAT,OAAiBC,EAAjB,UA0Lf,CAAA,IAAA,QAvLO,MAAA,WAGJ,KAAKoB,YAAcT,EAAUG,MAC7B,KAAKM,YAAcT,EAAUK,WAI1Bb,KAAAA,QAAS,EAAW,EAAA,YAAA,KAAM,KAAKoB,OAAO,KAAKD,eAC3CrE,KAAAA,KAAKqB,wBAEL+C,KAAAA,YAAc,CAAC,KAAKpE,KAAM,KAAK6B,QAE/BsC,KAAAA,UAAYT,EAAUE,WA0K5B,CAAA,IAAA,SAvKMnC,MAAAA,SAAAA,GACD,GAAe,IAAf,KAAKC,MAGP,OAFKyC,KAAAA,UAAYT,EAAUI,cAC3BnC,QAAQC,IAAI,yBAMZ,GAAA,KAAKuC,YAAcT,EAAUC,QAC7B,KAAKQ,YAAcT,EAAUG,MAC7B,KAAKM,YAAcT,EAAUI,WAI3B,GAAA,OAAA,EAAA,KAAKM,aAAgB,EAAA,KAAKlB,SAAQC,QAAQ,SAAAlD,GAC5CA,EAAWsE,OAAO9C,KAGfyB,KAAAA,OAAS,KAAKA,OAAOsB,OAAO,SAAAlB,GACxB,OAACA,EAAMV,qBAGW,IAAvB,KAAKM,OAAOuB,QAAc,CACxB,GAAA,KAAKH,OAAOG,OAAS,EAAG,OAEvBJ,KAAAA,eACAF,KAAAA,UAAYT,EAAUK,SACtBtB,KAAAA,WA2IR,CAAA,IAAA,OAvIInB,MAAAA,SAAAA,EAAKoD,GACJ,GAAA,OAAA,EAAA,KAAKN,aAAgB,EAAA,KAAKlB,SAAQC,QAAQ,SAAAlD,GAC5CA,EAAW0E,KAAKrD,KAGd,KAAK6C,YAAcT,EAAUG,OAE/BvC,EAAIsD,KAAK,EAAG,EAAG,KAAKzD,UAAW,KAAKC,YACpCE,EAAIU,UAAY,mBAChBV,EAAIuD,OAGJvD,EAAIwD,KAAO,sBACXxD,EAAIU,UAAY,QAChBV,EAAIyD,UAAY,SAChBzD,EAAI0D,SACF,wBACA,KAAK7D,UAAY,EACjB,KAAKC,WAAa,GAEpBE,EAAIwD,KAAO,sBACXxD,EAAI0D,SACF,mBACA,KAAK7D,UAAY,EACjB,KAAKC,WAAa,EAAI,IAExBE,EAAIwD,KAAO,uBAGT,KAAKX,YAAcT,EAAUC,SAG/BrC,EAAIsD,KAAK,EAAG,EAAG,KAAKzD,UAAW,KAAKC,YACpCE,EAAIU,UAAY,qBAChBV,EAAIuD,OAGJvD,EAAIwD,KAAO,sBACXxD,EAAIU,UAAY,QAChBV,EAAIyD,UAAY,SAChBzD,EAAI0D,SAAS,cAAe,KAAK7D,UAAY,EAAG,KAAKC,WAAa,EAAI,KAGpE,KAAK+C,YAAcT,EAAUI,WAE/BxC,EAAIsD,KAAK,EAAG,EAAG,KAAKzD,UAAW,KAAKC,YACpCE,EAAIU,UAAY,mBAChBV,EAAIuD,OAGJvD,EAAIwD,KAAO,sBACXxD,EAAIU,UAAY,QAChBV,EAAIyD,UAAY,SAChBzD,EAAI0D,SAAS,YAAa,KAAK7D,UAAY,EAAG,KAAKC,WAAa,MAkFnE,CAAA,IAAA,cA9Ea,MAAA,WACR,KAAK+C,YAAcT,EAAUC,OAE1BQ,KAAAA,UAAYT,EAAUE,QAGtBO,KAAAA,UAAYT,EAAUC,SAwE9B,CAAA,IAAA,UApEOrC,MAAAA,SAAAA,EAAKoD,GAGLO,IACFC,EACAC,EACAC,EACAC,EAJEJ,EAAM,IAAIK,MAMVC,EAAO,WACXC,cAAcJ,GACdV,EAAO/D,MAAQuE,EAAIO,OAAOC,WAC1BL,EAAa,GAAJH,EAETR,EAAO7D,OAASsE,MAAeD,EAAa,EAATG,GAAcJ,EAAItE,MAA9B,KAEvByE,EAAiBO,YAAY,WAC3BC,IACAtE,EAAIC,UAAU0D,EAAK,EAAG,EAAGA,EAAItE,MAAO,IAAK0E,EAAQ,EAAGH,EAAa,EAATG,EAAYF,GACpEU,WAAWC,EAAWC,EAAQ,IAAK,OAClC,MAGCH,EAAQ,WACZtE,EAAIsD,KAAK,EAAG,EAAGM,EAAGC,GAClB7D,EAAIuD,QAGAiB,EAAY,WACX,IAAA,IAAIE,EAAI,EAAGA,EAAID,EAAQ,EAAG,IAAKC,IAAK,CACjCvF,IAAAA,EAAIwF,KAAKC,SAAWhB,EACpB9E,EAAI6F,KAAKC,SAAWf,EACpBgB,EAAcjB,EAAIzE,EAClB2F,EAAeL,EAAQ,EAAGZ,EAAI,GACpC7D,EAAIC,UACFmD,EACA,EACAtE,EACA+F,EACAC,EACA3F,EACAL,EACA+F,EACAC,GAEF9E,EAAIC,UACFmD,EACAyB,EACA/F,EACAK,EACA2F,EACA,EACAhG,EACAK,EACA2F,KAKAL,EAAU,SAACM,EAAGC,GAAM,SAAGL,KAAKC,UAAYI,EAAID,GAAKA,IAEvDpB,EAAIsB,OAAS,WACXhB,IACAE,OAAOe,SAAWjB,GAGpBN,EAAIwB,IACF,yFACH,EAAA,GAAA,QAAA,QAAA;;ACvMH,aAxBA,IAAA,EAAA,EAAA,QAAA,WAwBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtBA,IAAI/B,EAASzD,SAASC,eAAe,cACjCI,EAAMoD,EAAOgC,WAAW,MAEtBC,EAAa,IACbC,EAAc,IAEhB7F,EAAO,IAAIiD,EAAJ,QAAS2C,EAAYC,GAE5BC,EAAW,EAEf,SAASC,EAASC,GACZtF,IAAAA,EAAYsF,EAAYF,EAC5BA,EAAWE,EAEXzF,EAAI0F,UAAU,EAAG,EAAGL,EAAYC,GAEhC7F,EAAKwD,OAAO9C,GACZV,EAAK4D,KAAKrD,EAAKoD,GAEfuC,sBAAsBH,GAGxBrB,OAAOwB,sBAAsBH","file":"src.a1c60d0a.js","sourceRoot":"..","sourcesContent":["export function detectCollision(ball, gameObject) {\n  let bottomOfBall = ball.position.y + ball.size;\n  let topOfBall = ball.position.y;\n\n  let topOfObject = gameObject.position.y;\n  let leftSideOfObject = gameObject.position.x;\n  let rightSideOfObject = gameObject.position.x + gameObject.width;\n  let bottomOfObject = gameObject.position.y + gameObject.height;\n\n  if (\n    bottomOfBall >= topOfObject &&\n    topOfBall <= bottomOfObject &&\n    ball.position.x >= leftSideOfObject &&\n    ball.position.x + ball.size <= rightSideOfObject\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import { detectCollision } from \"./collisionDetection\";\n\nexport default class Ball {\n  constructor(game) {\n    this.image = document.getElementById(\"ball-img\");\n\n    this.gameWidth = game.gameWidth;\n    this.gameHeight = game.gameHeight;\n    this.game = game;\n    this.resetPositionAndSpeed();\n    this.size = 20;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.position.x,\n      this.position.y,\n      this.size,\n      this.size\n    );\n  }\n\n  resetPositionAndSpeed() {\n    this.position = {\n      x: 10,\n      y: 400\n    };\n\n    this.speed = {\n      x: 4,\n      y: -2\n    };\n  }\n\n  update(deltaTime) {\n    this.position.x += this.speed.x;\n    this.position.y += this.speed.y;\n\n    // avoid ball going through the horizontal walls\n    if (this.position.x + this.size > this.gameWidth || this.position.x < 0) {\n      this.speed.x = -this.speed.x;\n    }\n\n    // top wall\n    if (this.position.y < 0) {\n      this.speed.y = -this.speed.y;\n    }\n\n    // bottom wall\n    if (this.position.y + this.size > this.gameHeight) {\n      this.game.lives--;\n      console.log(\"lives\", this.game.lives);\n      this.resetPositionAndSpeed();\n    }\n\n    if (detectCollision(this, this.game.paddle)) {\n      this.speed.y = -this.speed.y;\n      this.position.y = this.game.paddle.position.y - this.size;\n    }\n  }\n}\n","export default class Paddle {\n  constructor(game) {\n    this.gameWidth = game.gameWidth;\n\n    //   size of paddle\n    this.width = 150;\n    this.height = 20;\n\n    // position of paddle\n    this.position = {\n      x: game.gameWidth / 2 - this.width / 2,\n      y: game.gameHeight - this.height - 10\n    };\n\n    // velocity of paddle\n    this.speed = 0;\n    this.maxSpeed = 7;\n  }\n\n  // game controls\n  moveLeft() {\n    this.speed = -this.maxSpeed;\n  }\n\n  moveRight() {\n    this.speed = this.maxSpeed;\n  }\n\n  stop() {\n    this.speed = 0;\n  }\n\n  // draw canvas\n  draw(ctx) {\n    ctx.fillStyle = \"goldenrod\";\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n\n  // update canvas\n  update(deltaTime) {\n    // delta-time aka dt is the change in time ie how much time has past\n\n    this.position.x += this.speed;\n\n    this.position.x < 0 ? (this.position.x = 0) : this.position.x;\n    this.position.x + this.width > this.gameWidth\n      ? (this.position.x = this.gameWidth - this.width)\n      : this.position.x;\n  }\n}\n","export default class InputHanlder {\n  constructor(paddle, game) {\n    document.addEventListener(\"keydown\", event => {\n      switch (event.keyCode) {\n        case 37:\n          paddle.moveLeft();\n          break;\n\n        case 39:\n          paddle.moveRight();\n          break;\n\n        case 27:\n          game.togglePause();\n          break;\n\n        case 32:\n          game.start();\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      switch (event.keyCode) {\n        //   move left\n        case 37:\n          if (paddle.speed < 0) paddle.stop();\n          break;\n\n        //  move right\n        case 39:\n          if (paddle.speed > 0) paddle.stop();\n          break;\n      }\n    });\n  }\n}\n","import { detectCollision } from \"./collisionDetection\";\n\nexport default class Brick {\n  constructor(game, position) {\n    this.image = document.getElementById(\"bitcoin-brick\");\n\n    this.game = game;\n\n    this.width = 80;\n    this.height = 24;\n\n    this.position = position;\n\n    this.markedForDeletions = false;\n  }\n\n  update() {\n    if (detectCollision(this.game.ball, this)) {\n      this.game.ball.speed.y = -this.game.ball.speed.y;\n      this.markedForDeletions = true;\n    }\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n}\n","import Brick from \"./brick\";\n\nexport const level1 = [\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 1, 0, 1, 0, 1, 0, 1, 1],\n  [1, 0, 1, 0, 1, 0, 1, 0, 1, 1],\n  [1, 0, 1, 0, 0, 0, 1, 0, 1, 1],\n  [1, 0, 0, 1, 1, 1, 1, 0, 0, 1],\n  [1, 1, 1, 1, 0, 1, 1, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\n  // [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n];\n\nexport const level2 = [\n  [1, 1, 0, 1, 0, 0, 1, 1, 1, 1],\n  [1, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [1, 1, 0, 1, 1, 1, 0, 1, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [1, 1, 0, 1, 1, 1, 0, 1, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [1, 1, 0, 1, 0, 1, 0, 1, 0, 1]\n\n  // [0, 0, 0, 0, 0, 0, 0, 1, 1, 0]\n];\n\nexport const level3 = [\n  [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [0, 0, 1, 1, 1, 1, 1, 1, 1, 0],\n  [0, 0, 1, 1, 1, 1, 1, 1, 0, 1],\n  [0, 1, 1, 1, 1, 1, 1, 0, 1, 1],\n  [0, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 0, 1, 1],\n  [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\n  [0, 1, 0, 1, 1, 1, 1, 1, 1, 0],\n  [1, 1, 1, 0, 1, 1, 1, 1, 0, 1],\n  [1, 1, 1, 1, 0, 1, 1, 0, 1, 1],\n  [1, 1, 1, 1, 1, 0, 0, 1, 1, 1],\n  [1, 1, 1, 1, 0, 1, 1, 0, 1, 1],\n  [1, 1, 1, 0, 1, 1, 1, 1, 0, 1]\n\n  // [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]\n];\n\nexport function buildLevel(game, level) {\n  let bricks = [];\n\n  level.forEach((row, rowIndex) => {\n    row.forEach((brick, brickIndex) => {\n      let position = {\n        x: 80 * brickIndex,\n        y: 80 + 24 * rowIndex\n      };\n      if (brick === 1) {\n        bricks.push(new Brick(game, position));\n      }\n    });\n  });\n\n  return bricks;\n}\n","import Ball from './ball';\nimport Paddle from './paddle';\nimport InputHandler from './input';\nimport Brick from './brick';\nimport { level1, level2, level3, buildLevel } from './levels';\n\nconst GAMESIZE = {\n  x: 800,\n  y: 600,\n};\n\nconst GAMESTATE = {\n  PAUSED: 0,\n  RUNNING: 1,\n  MENU: 2,\n  GAMEOVER: 3,\n  NEWLEVEL: 4,\n};\n\nexport default class Game {\n  constructor() {\n    this.gameWidth = GAMESIZE.x;\n    this.gameHeight = GAMESIZE.y;\n    this.ball = new Ball(this);\n    this.paddle = new Paddle(this);\n    new InputHandler(this.paddle, this);\n    this.setupGame();\n  }\n\n  setupGame() {\n    this.gameWidth = this.gameWidth;\n    this.gameHeight = this.gameHeight;\n    this.gamestate = GAMESTATE.MENU;\n    this.gameObjects = [];\n    this.lives = 3;\n    this.bricks = [];\n    this.currentLevel = 0;\n    this.levels = [level1, level2, level3];\n  }\n\n  start() {\n    // Only start game from MENU and NEWLEVEL\n    if (\n      this.gamestate !== GAMESTATE.MENU &&\n      this.gamestate !== GAMESTATE.NEWLEVEL\n    )\n      return;\n\n    this.bricks = buildLevel(this, this.levels[this.currentLevel]);\n    this.ball.resetPositionAndSpeed();\n\n    this.gameObjects = [this.ball, this.paddle];\n\n    this.gamestate = GAMESTATE.RUNNING;\n  }\n\n  update(deltaTime) {\n    if (this.lives === 0) {\n      this.gamestate = GAMESTATE.GAMEOVER;\n      console.log('gameover restart game');\n      return;\n    }\n\n    // Tell the game to Pause\n    if (\n      this.gamestate === GAMESTATE.PAUSED ||\n      this.gamestate === GAMESTATE.MENU ||\n      this.gamestate === GAMESTATE.GAMEOVER\n    )\n      return;\n\n    [...this.gameObjects, ...this.bricks].forEach(gameObject => {\n      gameObject.update(deltaTime);\n    });\n\n    this.bricks = this.bricks.filter(brick => {\n      return !brick.markedForDeletions;\n    });\n\n    if (this.bricks.length === 0) {\n      if (this.levels.length < 1) return;\n\n      this.currentLevel++;\n      this.gamestate = GAMESTATE.NEWLEVEL;\n      this.start();\n    }\n  }\n\n  draw(ctx, canvas) {\n    [...this.gameObjects, ...this.bricks].forEach(gameObject => {\n      gameObject.draw(ctx);\n    });\n\n    if (this.gamestate === GAMESTATE.MENU) {\n      // draw background\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\n      ctx.fillStyle = 'rgba(0, 0, 0, 1)';\n      ctx.fill();\n\n      // write text\n      ctx.font = '50px Helvetica Neue';\n      ctx.fillStyle = 'white';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        'Hit SPACEBAR to begin',\n        this.gameWidth / 2,\n        this.gameHeight / 2\n      );\n      ctx.font = '20px Helvetica Neue';\n      ctx.fillText(\n        'Hit ESC to Pause',\n        this.gameWidth / 2,\n        this.gameHeight / 2 + 90\n      );\n      ctx.font = '20px Helvetica Neue';\n    }\n\n    if (this.gamestate === GAMESTATE.PAUSED) {\n      // this.page404(ctx, canvas)\n      // draw background\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      ctx.fill();\n\n      // write text\n      ctx.font = '50px Helvetica Neue';\n      ctx.fillStyle = 'white';\n      ctx.textAlign = 'center';\n      ctx.fillText('Game Paused', this.gameWidth / 2, this.gameHeight / 2 + 90);\n    }\n\n    if (this.gamestate === GAMESTATE.GAMEOVER) {\n      // draw background\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\n      ctx.fillStyle = 'rgba(0, 0, 0, 1)';\n      ctx.fill();\n\n      // write text\n      ctx.font = '50px Helvetica Neue';\n      ctx.fillStyle = 'white';\n      ctx.textAlign = 'center';\n      ctx.fillText('Game Over', this.gameWidth / 2, this.gameHeight / 2);\n    }\n  }\n\n  togglePause() {\n    if (this.gamestate === GAMESTATE.PAUSED) {\n      // if Paused, then unPause the game\n      this.gamestate = GAMESTATE.RUNNING;\n    } else {\n      // otherwise, Pause the game\n      this.gamestate = GAMESTATE.PAUSED;\n    }\n  }\n\n  page404(ctx, canvas) {\n    // const canvas = document.getElementById('canvas');\n    // const context = canvas.getContext('2d');\n    const img = new Image();\n    let w;\n    let h;\n    let glitchInterval;\n    let offset;\n\n    const init = () => {\n      clearInterval(glitchInterval);\n      canvas.width = w = window.innerWidth;\n      offset = w * 0.1;\n\n      canvas.height = h = ~~(650 * ((w - offset * 2) / img.width));\n\n      glitchInterval = setInterval(() => {\n        clear();\n        ctx.drawImage(img, 0, 0, img.width, 750, offset, 0, w - offset * 2, h);\n        setTimeout(glitchImg, randInt(250, 1000));\n      }, 500);\n    };\n\n    const clear = () => {\n      ctx.rect(0, 0, w, h);\n      ctx.fill();\n    };\n\n    const glitchImg = () => {\n      for (let i = 0; i < randInt(1, 13); i++) {\n        const x = Math.random() * w;\n        const y = Math.random() * h;\n        const spliceWidth = w - x;\n        const spliceHeight = randInt(5, h / 3);\n        ctx.drawImage(\n          canvas,\n          0,\n          y,\n          spliceWidth,\n          spliceHeight,\n          x,\n          y,\n          spliceWidth,\n          spliceHeight\n        );\n        ctx.drawImage(\n          canvas,\n          spliceWidth,\n          y,\n          x,\n          spliceHeight,\n          0,\n          y,\n          x,\n          spliceHeight\n        );\n      }\n    };\n\n    const randInt = (a, b) => ~~(Math.random() * (b - a) + a);\n\n    img.onload = () => {\n      init();\n      window.onresize = init;\n    };\n\n    img.src =\n      'https://singaporefintech.org/wp-content/uploads/2017/11/Luno_Logo_Blue_Large-3.png';\n  }\n}\n","import Game from \"./game\";\n\nlet canvas = document.getElementById(\"gameScreen\");\nlet ctx = canvas.getContext(\"2d\"); // gives a rendering context for drawing onto the canvas\n\nconst GAME_WIDTH = 800;\nconst GAME_HEIGHT = 600;\n\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT);\n\nlet lastTime = 0;\n// game loop  - runs every frame, updates all objects, redraws them into their new position, move to next frame\nfunction gameLoop(timestamp) {\n  let deltaTime = timestamp - lastTime;\n  lastTime = timestamp;\n\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n\n  game.update(deltaTime);\n  game.draw(ctx, canvas);\n\n  requestAnimationFrame(gameLoop);\n}\n\nwindow.requestAnimationFrame(gameLoop);\n\n"]}